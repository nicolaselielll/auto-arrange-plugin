{"version":3,"file":"rete-auto-arrange-plugin.min.js","sources":["src/appliers/applier.ts","src/appliers/list/standard.ts","src/appliers/list/transition/animation.ts","src/appliers/list/transition/index.ts","src/presets/classic/index.ts","src/index.ts"],"sourcesContent":["import { ElkNode } from 'elkjs'\nimport { NodeEditor } from 'rete'\nimport { BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { ExpectedSchemes } from '../types'\n\nexport abstract class Applier<S extends ExpectedSchemes, K> {\n  editor!: NodeEditor<S>\n  area!: BaseAreaPlugin<S, K>\n\n  setEditor(editor: NodeEditor<S>) {\n    this.editor = editor\n  }\n\n  setArea(area: BaseAreaPlugin<S, K>) {\n    this.area = area\n  }\n\n  public abstract apply(nodes: ElkNode[]): Promise<void>\n}\n","import { ElkNode, ElkShape } from 'elkjs'\nimport { NodeId } from 'rete'\n\nimport { ExpectedSchemes } from '../../types'\nimport { Applier } from '../applier'\n\n/**\n * Standard applier. Applies the layout to the nodes and their children immediately\n */\nexport class StandardApplier<S extends ExpectedSchemes, K> extends Applier<S, K> {\n  protected getValidShapes<Shape extends ElkShape>(shapes: Shape[]): (Shape & Required<ElkShape>)[] {\n    return shapes.filter((shape): shape is Shape & Required<ElkShape> => {\n      const { x, y, width, height } = shape\n\n      return ![typeof x, typeof y, typeof width, typeof height].includes('undefined')\n    })\n  }\n  protected async resizeNode(id: NodeId, width: number, height: number): Promise<void | boolean> {\n    return await this.area.resize(id, width, height)\n  }\n  protected async translateNode(id: NodeId, x: number, y: number): Promise<void | boolean> {\n    const view = this.area.nodeViews.get(id)\n\n    if (view) {\n      await view.translate(x, y)\n    }\n  }\n\n  public async apply(nodes: ElkNode[], offset = { x: 0, y: 0 }) {\n    const correctNodes = this.getValidShapes(nodes)\n\n    await Promise.all(correctNodes.map(async ({ id, x, y, width, height, children }) => {\n      await Promise.all([\n        this.resizeNode(id, width, height),\n        this.translateNode(id, offset.x + x, offset.y + y)\n      ])\n\n      if (children) {\n        await this.apply(children, { x: offset.x + x, y: offset.y + y })\n      }\n    }))\n  }\n}\n","\ntype AnimationRecord = {\n  startTime: number\n  duration: number\n  cb: (t: number) => void\n  done: (success: boolean) => void\n}\n\nexport class AnimationSystem {\n  activeAnimations = new Map<string, AnimationRecord>()\n  frameId?: number\n\n  start() {\n    const entries = Array.from(this.activeAnimations.entries())\n\n    entries.forEach(([key, { startTime, duration, cb, done }]) => {\n      let t = (Date.now() - startTime) / duration\n\n      if (t >= 1) t = 1\n\n      if (t < 0 || t >= 1) {\n        this.activeAnimations.delete(key)\n        if (t >= 1) {\n          cb(1)\n          done(true)\n        }\n        return\n      }\n      cb(t)\n    })\n    this.frameId = requestAnimationFrame(() => {\n      this.start()\n    })\n  }\n\n  async add<R>(duration: number, id: string, tick: (t: number) => Promise<R>) {\n    const startTime = Date.now()\n\n    return new Promise<boolean>(done => {\n      this.activeAnimations.set(id, { startTime, duration, cb: t => void tick(t), done })\n    })\n  }\n\n  cancel(key: string) {\n    this.activeAnimations.get(key)?.done(false)\n    this.activeAnimations.delete(key)\n  }\n\n  stop() {\n    if (typeof this.frameId !== 'undefined') cancelAnimationFrame(this.frameId)\n  }\n}\n","import { ElkNode } from 'elkjs'\nimport { NodeId } from 'rete'\n\nimport { ExpectedSchemes } from '../../../types'\nimport { StandardApplier } from '../standard'\nimport { AnimationSystem } from './animation'\n\n/**\n * Transition applier props\n */\nexport type Props = {\n  /** Transition duration */\n  duration?: number\n  /** Transition timing function. Default is linear */\n  timingFunction?: (t: number) => number\n  /** Callback for each tick (frame) of the transition */\n  onTick?: (t: number) => void\n  /** Callback specifying whether the node needs to be laid out */\n  needsLayout?: (id: NodeId) => boolean\n}\n\n/**\n * Transition applier. Applies the layout to the nodes and their children with transition\n */\nexport class TransitionApplier<S extends ExpectedSchemes, K> extends StandardApplier<S, K> {\n  duration: number\n  timingFunction: (t: number) => number\n  animation = new AnimationSystem()\n\n  /**\n   * @param props Transition applier props\n   */\n  constructor(private props?: Props) {\n    super()\n    this.duration = typeof props?.duration !== 'undefined'\n      ? props.duration\n      : 2000\n    this.timingFunction = typeof props?.timingFunction !== 'undefined'\n      ? props.timingFunction\n      : t => t\n\n    this.animation.start()\n  }\n\n  protected applyTiming(from: number, to: number, t: number) {\n    const k = this.timingFunction(t)\n\n    return from * (1 - k) + to * k\n  }\n\n  protected async resizeNode(id: NodeId, width: number, height: number) {\n    const node = this.editor.getNode(id)\n\n    if (!node) return false\n    const previous = { width: node.width, height: node.height }\n\n    return await this.animation.add(this.duration, `${id}_resize`, t => {\n      const currentWidth = this.applyTiming(previous.width, width, t)\n      const currentHeight = this.applyTiming(previous.height, height, t)\n\n      if (this.props?.onTick) {\n        this.props.onTick(t)\n      }\n      return super.resizeNode(id, currentWidth, currentHeight)\n    })\n  }\n\n  protected async translateNode(id: NodeId, x: number, y: number) {\n    const view = this.area.nodeViews.get(id)\n\n    if (!view) return false\n    const previous = { ...view.position }\n\n    return await this.animation.add(this.duration, `${id}_translate`, t => {\n      const currentX = this.applyTiming(previous.x, x, t)\n      const currentY = this.applyTiming(previous.y, y, t)\n\n      if (this.props?.onTick) {\n        this.props.onTick(t)\n      }\n      return super.translateNode(id, currentX, currentY)\n    })\n  }\n\n  public cancel(id: NodeId) {\n    this.animation.cancel(`${id}_resize`)\n    this.animation.cancel(`${id}_translate`)\n  }\n\n  public async apply(nodes: ElkNode[], offset = { x: 0, y: 0 }) {\n    const correctNodes = this.getValidShapes(nodes)\n\n    await Promise.all(correctNodes.map(({ id, x, y, width, height, children }) => {\n      const hasChilden = children?.length\n      const needsLayout = this.props?.needsLayout\n        ? this.props.needsLayout(id)\n        : true\n      const forceSelf = !hasChilden || needsLayout\n\n      return Promise.all([\n        hasChilden && this.apply(children, { x: offset.x + x, y: offset.y + y }),\n        forceSelf && this.resizeNode(id, width, height),\n        forceSelf && this.translateNode(id, offset.x + x, offset.y + y)\n      ])\n    }))\n  }\n\n  public destroy() {\n    this.animation.stop()\n  }\n}\n","import { PortData, Preset } from '../types'\n\nexport const setup = (props?: { spacing?: number, top?: number, bottom?: number, x?: number }): Preset => {\n  return () => ({\n    port(data): PortData {\n      const { spacing, top, bottom, x } = {\n        spacing: typeof props?.spacing !== 'undefined' ? props.spacing : 35,\n        top: typeof props?.top !== 'undefined' ? props.top : 35,\n        bottom: typeof props?.bottom !== 'undefined' ? props.bottom : 15,\n        x: typeof props?.x !== 'undefined' ? props.x : 0 // Default value for x\n      };\n\n      if (data.side === 'output') {\n        return {\n          x: x, // Use the destructured x directly\n          y: top + data.index * spacing,\n          width: 15,\n          height: 15,\n          side: 'EAST'\n        };\n      }\n      return {\n        x: -x, // Use the destructured x directly\n        y: data.height - bottom - data.ports * spacing + data.index * spacing,\n        width: 15,\n        height: 15,\n        side: 'WEST'\n      };\n    }\n  });\n};\n","import ELK, { ElkNode, ElkPort, LayoutOptions } from 'elkjs'\nimport { NodeEditor, NodeId, Root, Scope } from 'rete'\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { Applier, StandardApplier } from './appliers'\nimport { Preset } from './presets/types'\nimport { ExpectedSchemes } from './types'\n\nexport type { Preset }\nexport * as ArrangeAppliers from './appliers'\nexport * as Presets from './presets'\nexport * from './types'\n\ntype Context<S extends ExpectedSchemes> = {\n  nodes: S['Node'][]\n  connections: S['Connection'][]\n}\n\n/**\n * Auto arrange plugin. Layouts the graph using `elk.js`\n * @priority 10\n */\nexport class AutoArrangePlugin<Schemes extends ExpectedSchemes, T = never> extends Scope<never, [BaseArea<Schemes> | T, Root<Schemes>]> {\n  elk = new ELK()\n  demonstration = 'https://rtsys.informatik.uni-kiel.de/elklive/json.html'\n  presets: Preset[] = []\n\n  constructor() {\n    super('auto-arrange')\n  }\n\n  /**\n   * Adds a preset to the plugin, which will be used to layout the node ports and customize the layout options\n   * @param preset Preset to add\n   */\n  public addPreset(preset: Preset) {\n    this.presets.push(preset)\n  }\n\n  private findPreset(nodeId: string) {\n    for (const presetFactory of this.presets) {\n      const result = presetFactory(nodeId)\n\n      if (result) return result\n    }\n    throw new Error('cannot find preset for node with id = ' + nodeId)\n  }\n\n  private getArea() {\n    return this.parentScope<BaseAreaPlugin<Schemes, T>>(BaseAreaPlugin)\n  }\n\n  private getEditor() {\n    return this.getArea().parentScope<NodeEditor<Schemes>>(NodeEditor)\n  }\n\n  private nodeToLayoutChild(node: Schemes['Node'], context: Context<Schemes>): ElkNode {\n    const { id, width, height } = node\n    const inputs = node.inputs\n      ? Object.entries(node.inputs).map(([key, input]) => ({\n        key,\n        input\n      }))\n      : []\n    const outputs = node.outputs\n      ? Object.entries(node.outputs).map(([key, output]) => ({\n        key,\n        output\n      }))\n      : []\n    const preset = this.findPreset(id)\n\n    return {\n      id,\n      width,\n      height,\n      labels: [\n        {\n          text: 'label' in node\n            ? node.label\n            : ''\n        }\n      ],\n      ...this.graphToElk(context, id),\n      ports: [\n        ...inputs\n          .sort((a, b) => (a.input?.index ?? 0) - (b.input?.index ?? 0))\n          .map(({ key }, index) => {\n            const { side, width: portWidth, height: portHeight, x, y } = preset.port({\n              nodeId: id,\n              key,\n              side: 'input',\n              width,\n              height,\n              index,\n              ports: inputs.length\n            })\n\n            return {\n              id: this.getPortId(id, key, 'input'),\n              width: portWidth,\n              height: portHeight,\n              x,\n              y,\n              properties: {\n                side\n              }\n            } as ElkPort\n          }),\n        ...outputs\n          .sort((a, b) => (a.output?.index ?? 0) - (b.output?.index ?? 0))\n          .map(({ key }, index) => {\n            const { side, width: portWidth, height: portHeight, x, y } = preset.port({\n              nodeId: id,\n              side: 'output',\n              key,\n              index,\n              width,\n              height,\n              ports: outputs.length\n            })\n\n            return {\n              id: this.getPortId(id, key, 'output'),\n              width: portWidth,\n              height: portHeight,\n              x,\n              y,\n              properties: {\n                side\n              }\n            } as ElkPort\n          })\n      ],\n      layoutOptions: {\n        ...preset.options?.(id) || {},\n\n        portConstraints: 'FIXED_POS'\n      }\n    } as ElkNode\n  }\n\n  private connectionToLayoutEdge(connection: Schemes['Connection']) {\n    const source = connection.sourceOutput\n      ? this.getPortId(connection.source, connection.sourceOutput, 'output')\n      : connection.source\n    const target = connection.targetInput\n      ? this.getPortId(connection.target, connection.targetInput, 'input')\n      : connection.target\n\n    return {\n      id: connection.id,\n      sources: [source],\n      targets: [target]\n    }\n  }\n\n  private graphToElk(context: Context<Schemes>, parent?: NodeId): Pick<ElkNode, 'children' | 'edges'> {\n    const nodes = context.nodes.filter(n => n.parent === parent)\n\n    return {\n      children: nodes\n        .map(n => this.nodeToLayoutChild(n, context)),\n      edges: context.connections\n        .filter(() => !parent)\n        .map(c => this.connectionToLayoutEdge(c))\n    }\n  }\n\n  private getPortId(id: NodeId, key: string, side: 'input' | 'output') {\n    return [id, key, side].join('_')\n  }\n\n  /**\n   * Method to layout the graph\n   * @param props Options for the layout\n   * @param props.options elk.js options for the layout\n   * @param props.applier Layout applier. Responsible for applying node positions to the graph\n   * @returns Debug information about the layout\n   */\n  // eslint-disable-next-line max-statements, complexity\n  async layout(props?: { options?: LayoutOptions, applier?: Applier<Schemes, T> } & Partial<Context<Schemes>>) {\n    const nodes = props?.nodes ?? this.getEditor().getNodes()\n    const connections = props?.connections ?? this.getEditor().getConnections()\n    const graph: ElkNode = {\n      id: 'root',\n      layoutOptions: {\n        /* eslint-disable @typescript-eslint/naming-convention */\n        'elk.algorithm': 'layered',\n        'elk.hierarchyHandling': 'INCLUDE_CHILDREN',\n        'elk.edgeRouting': 'POLYLINE',\n        ...props?.options ?? {} as LayoutOptions\n        /* eslint-enable @typescript-eslint/naming-convention */\n      },\n      ...this.graphToElk({ nodes, connections })\n    }\n    const applier = props?.applier ?? new StandardApplier()\n    const source = JSON.stringify(graph, null, '\\t')\n\n    applier.setEditor(this.getEditor())\n    applier.setArea(this.getArea())\n\n    try {\n      const result = await this.elk.layout(graph)\n\n      if (result.children) {\n        await applier.apply(result.children)\n      }\n\n      return {\n        demonstration: this.demonstration,\n        source,\n        result\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn('[rete-auto-arrange-plugin]', {\n        source,\n        demonstration: this.demonstration\n      })\n      throw error\n    }\n  }\n}\n"],"names":["Applier","_createClass","_classCallCheck","key","value","editor","this","area","StandardApplier","_Applier","_callSuper","arguments","_inherits","shapes","filter","shape","x","y","width","height","_typeof","includes","_resizeNode","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","resize","abrupt","sent","stop","_x","_x2","_x3","apply","_translateNode","_callee2","view","_context2","nodeViews","get","translate","_x4","_x5","_x6","_apply","_callee4","nodes","offset","correctNodes","_this","_args4","_context4","length","undefined","getValidShapes","Promise","all","map","_ref2","_callee3","_ref","children","_context3","resizeNode","translateNode","_x8","_x7","AnimationSystem","_defineProperty","Map","Array","from","activeAnimations","entries","forEach","_slicedToArray","_ref2$","startTime","duration","cb","done","t","Date","now","frameId","requestAnimationFrame","start","_add","tick","_this2","set","_this$activeAnimation","cancelAnimationFrame","TransitionApplier","_StandardApplier","props","timingFunction","animation","to","k","node","previous","getNode","add","concat","_this2$props","currentWidth","applyTiming","currentHeight","onTick","_superPropGet","_this3","_objectSpread","position","_this3$props","currentX","currentY","cancel","_this4","_args3","_this4$props","hasChilden","needsLayout","forceSelf","port","data","_spacing$top$bottom$x","spacing","top","bottom","side","index","ports","AutoArrangePlugin","_Scope","ELK","preset","presets","push","nodeId","_step","_iterator","_createForOfIteratorHelper","s","n","result","presetFactory","err","e","f","Error","parentScope","BaseAreaPlugin","getArea","NodeEditor","context","_preset$options","inputs","Object","input","outputs","_ref3","_ref4","output","findPreset","labels","text","label","graphToElk","_toConsumableArray","sort","a","b","_a$input$index","_a$input","_b$input$index","_b$input","_ref5","_preset$port","portWidth","portHeight","getPortId","properties","_a$output$index","_a$output","_b$output$index","_b$output","_ref6","_preset$port2","layoutOptions","options","call","portConstraints","connection","source","sourceOutput","target","targetInput","sources","targets","parent","nodeToLayoutChild","edges","connections","c","connectionToLayoutEdge","join","_layout","_props$nodes","_props$connections","_props$options","_props$applier","graph","applier","getEditor","getNodes","getConnections","JSON","stringify","setEditor","setArea","elk","layout","demonstration","t0","console","warn","Scope"],"mappings":"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"}